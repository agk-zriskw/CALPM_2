---
title: "CALPM"
author: "Grupa 2"
format: 
  html:
    toc: true
    toc-location: right
    toc-title: Spis Treści
    number-sections: true
    embed-resources: true
    html-math-method: katex
    code-tools: true
    code-fold: show
    code-summary: "Show and hide code"
    link-external-icon: true
    link-external-newwindow: true
    smooth-scroll: true
    self-contained: true
    fig-align: center
execute: 
  echo: true
  cache: true
  error: false
  warning: false
  output: true
---

# Pakiety

Pakiety potrzebne do wykonanie analizy danych i modeli.

```{r}
library(tidymodels)
library(tidyverse)
library(stringr)
library(vip)
library(pdp)
library(DALEX)
library(DALEXtra)
library(bestNormalize)
library(rules)
library(baguette)
library(finetune)
library(doParallel)
library(openair)
```


# Dane

Załadowanie danych treningowych.

```{r}
load("dane/ops.RData") 
```

## Opis danych znajdujących się w zbiorze

```{r}
ops |> glimpse()
```

Zestaw składa się z 21 zmiennych oraz 909 obserwacji. Objaśnienie każdej z nich:

* `date` - Data (krok 1 godzina)
* `grimm_pm10` - Średnie 1-godzinne stężenia PM10 zmierzone za pomocą GRIMM EDM 180
* `ops_pm10` - Średnie 1-godzinne stężenia PM10 zmierzone za pomocą TSI OPS 3330
* `n_0044` - liczba zliczeń cząstek w od 0.3 do 0.44 µm wyrażona w zliczeniach/cm^3^
* `n_0075` - liczba zliczeń cząstek w od 0.44 do 0.75 µm wyrażona w zliczeniach/cm^3^
* `n_0100` - liczba zliczeń cząstek w od 0.75 do 1.00 µm wyrażona w zliczeniach/cm^3^
* `n_0120` - liczba zliczeń cząstek w od 1.00 do 1.20 µm wyrażona w zliczeniach/cm^3^
* `n_0140` - liczba zliczeń cząstek w od 1.20 do 1.40 µm wyrażona w zliczeniach/cm^3^
* `n_0200` - liczba zliczeń cząstek w od 1.40 do 2.00 µm wyrażona w zliczeniach/cm^3^
* `n_0250` - liczba zliczeń cząstek w od 2.00 do 2.50 µm wyrażona w zliczeniach/cm^3^
* `n_0500` - liczba zliczeń cząstek w od 2.50 do 5.00 µm wyrażona w zliczeniach/cm^3^
* `n_0750` - liczba zliczeń cząstek w od 5.00 do 7.50 µm wyrażona w zliczeniach/cm^3^
* `n_1000` - liczba zliczeń cząstek w od 7.50 do 10.4 µm wyrażona w zliczeniach/cm^3^
* `temp` - temperatura powietrza [°C]
* `rh` - wilgotność względna [%]
* `pres` - ćiśnienie na poziomie stacji [hPa]
* `pres_sea` - ciśnienie nad poziomem morza [hPa]
* `wd` - kierunke wiatru [°]
* `mws` - maksymlan prędkość wiatru [m/s]
* `ws` - prędkość wiatru [m/s]
* `prec` - opad atmosferyczny [mm/h]

```{r}
ops |> is.na() |> colSums()
```

W zbiorze można zaobserwować liczne braki danych, które należy wyelminować przed dalszą analizą.

```{r}
ops <- ops |> na.omit()

ops |> is.na() |> sum()
```

Wszystkie braki danych zosatały usunięte.

```{r}
ops |> summary()
```

Powyżej przedstawiono podsumowanie wszystkich atrybutów zbioru danych.

## Zbiór weryfikacyjny i przygotowanie danych do analizy

Dane w zbiorze weryikacyjnym zawierają analogiczne informacje stosunku do zestawu danych `ops`, ale pomiary zostały wykonane w innym czasie i miejscu. Ponadto zastosowano inną metodę referencyjną pomiaru stężeń PM10 tj. BAM 1020 Met One Instruments zamiast GRIMM EDM 180.

Załadowanie danych weryfikacyjnych.

```{r}
load("dane/data_test.rdata")
```

Podgląd danych:

```{r}
ops_data |> glimpse()
```
Do analizy zosatną wykorzystane dane od data do prec, połaczone z danymi ramki danych bam.

```{r}
bam |> tail(5)
```
Dane będą połączone przy pomocy zamiennej `date` zapobiegając problemowi różnej ilości obserwacji.

Przygotowanie dany:

```{r}
weryfikacja <- ops_data |> select(date:prec)

weryfikacja <- weryfikacja |> 
  left_join(bam, by = "date") |> 
  mutate(grimm_pm10 = bam_pm10) |> 
  select(-bam_pm10)

ops_pm10 <- ops

ops <- ops |> select(-ops_pm10, -pres_sea)

nazwy <- colnames(ops) |> dput()
weryfikacja <- weryfikacja |> 
  select(all_of(nazwy))

colnames(weryfikacja) == colnames(ops)
```
Poniżej wszystkie aktrybuty danych weryfikacyjnych już z podmienioną kolumną `grimm_pm10` na dane pochodzące z czujnika BAM 1020.

Usunieto dodatkowo braki danych znajdujące się w zbiorze.

```{r}
weryfikacja <- weryfikacja |> na.omit()

weryfikacja |> glimpse()
```

# Eskploratacyjna analiza danych

Porównanie wyników pomiarowych stężeń PM_10_ wykonanych przy zastowaniu dwóch podobnych metod pomiarowych:

* **TSI OPS 3330** - metoda optyczna nie uznawana za równoważną do referencyjnej
* **GRIMM EDM180** - metoda optyczna równoważna do referencyjnej (kalibrowana na podstawie danych referencyjnych w lokalizacji wykonywania pomiarów)

```{r}
ops_pm10 |> na.omit() |> 
  ggplot(mapping = aes(x = grimm_pm10, 
                       y = ops_pm10)) + 
  geom_point(shape = 16, alpha = 0.3) +
  geom_abline(slope = c(0.5, 2, 1), 
              col = c( "blue4", "blue4", "red4"), size = 0.8) +
  geom_smooth(method = lm, color = "green4") +
  theme_bw() +
  scale_x_continuous(expand = c(0,0), limits = c(0, 101)) +
  scale_y_continuous(expand = c(0,0), limits = c(0, 101)) + 
  labs(title = "Porównanie metod pomiarowych stężeń PM10", 
       y = "TSI OPS 3330", 
       x = "GRIMM EDM 180") +
  coord_equal()

remove(ops_pm10)
```
Zaobserwowano, że dane z OPS są mocno niedoszacowane względem metody równoważnej do referencyjnej (około 2 krotnie).

## Szereg czasowy danych

```{r}
ops |> 
  ggplot(aes(x = date, y = grimm_pm10)) +
  geom_line(color = "steelblue") +
  theme_bw() +
  labs(title = "Szereg czasowy PM10 GRIMM",
       x = "Data",
       y = "PM10 [µg/m^3^]")
```

Na szeregu czsowanym można zaobserwować dużą zmienność poziomu stężania pyłu zawioszonego. Widoczna jest również cykliczność danych w pewnych dania stężenie wyraźnie spada w porównaniu z dniami o największych poziomach.

## PM10 vs dni tygodnia

Dodanie rozróżnienia w dniach tygodnia

```{r}
ops <- 
  ops |> 
  janitor::clean_names() |> 
  mutate(jday = lubridate::yday(date)) |> 
  mutate(
    wday = lubridate::wday(x = date, abbr = T, label = T),
    hour = lubridate::hour(x = date),
    day_work = case_when(
      wday == "Mon" ~ "week",
      wday == "Tue" ~ "week",
      wday == "Wed" ~ "week",
      wday == "Thu" ~ "week",
      wday == "Fri" ~ "week",
      wday == "Sat" ~ "weekend",
      wday == "Sun" ~ "weekend"
    )
  ) |> 
  mutate(day_work = as.factor(day_work))
```

Wykres pokazujący średnie wartości stężenia PM10 w danym dniu tygodnia.

```{r}
ops |>
  group_by(wday) |>
  summarise(mean_pm10 = mean(grimm_pm10, na.rm = TRUE)) |>
  ggplot(aes(x = wday, y = mean_pm10, fill = wday)) +
  geom_col(width = 0.7) +
  scale_fill_viridis_d(option = "D") +
  labs(title = "Średnie tygodniowe wartości PM10 (GRIMM)",
      x = "Dzień tygodnia",
      y = "Średnie PM10 GRIMM",
      fill = "Dzień tygodnia") +
  theme_bw() +
  theme(legend.position = "none",
        plot.title = element_text(face = "bold"))
```

Wyraźnie widać spadek stężnież w dni wolne od pracy oraz środę. Duży wzrost przypada na poniedziałek z tendecją spadkową w kolejne dni.

## Wizualizacja zliczeń w czasie

Przedstawienie danych, które zostaną użyte w modelach ml.

```{r}

```









